name: Image push release
on: 
  push:
    tags:
      - v*
env:
  image-push-owner: 'k8snetworkplumbingwg'
jobs:
  push-thick-amd64:
    name: Image push thick image/amd64
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.repository_owner == ${{ env.image-push-owner }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false

      - name: Push container image for thick plugin
        if: github.repository_owner == ${{ env.image-push-owner }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:stable-thick
            ${{ steps.docker_meta.outputs.tags }}-thick
          file: images/Dockerfile.thick
          platforms: linux/amd64

  push-thin:
    name: Image push thin image/amd64
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.repository_owner == ${{ env.image-push-owner }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false

      - name: Push thin container image
        if: github.repository_owner == ${{ env.image-push-owner }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:stable
            ${{ steps.docker_meta.outputs.tags }}
          file: images/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x
          sbom: false
          provenance: false

      - name: Push thin container debug image
        if: github.repository_owner == ${{ env.image-push-owner }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:stable-debug
            ${{ steps.docker_meta.outputs.tags }}-debug
          file: images/Dockerfile.debug
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x
          sbom: false
          provenance: false

# TODO: need to fix this action
#  push-origin:
#    name: Image push/origin
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to GitHub Container Registry
#        if: github.repository_owner == 'k8snetworkplumbingwg'
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Docker meta
#        id: docker_meta
#        uses: crazy-max/ghaction-docker-meta@v1
#        with:
#          images: ghcr.io/${{ github.repository }}
#          tag-latest: false
#
#      - name: Push container image
#        if: github.repository_owner == 'k8snetworkplumbingwg'
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          tags: |
#            ghcr.io/${{ github.repository }}:stable-origin
#            ${{ steps.docker_meta.outputs.tags }}-origin
#          file: images/Dockerfile.openshift
